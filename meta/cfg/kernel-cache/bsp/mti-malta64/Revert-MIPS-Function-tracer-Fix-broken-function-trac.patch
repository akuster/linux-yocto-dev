From eb6cb79808d7dc6535a71e5386f26c0abdaa1fb4 Mon Sep 17 00:00:00 2001
From: Bruce Ashfield <bruce.ashfield@windriver.com>
Date: Thu, 4 Apr 2013 23:39:57 -0400
Subject: [PATCH 1/2] Revert "MIPS: Function tracer: Fix broken function
 tracing"

This reverts commit 58b69401c797e470c8f638c598dddc44a4ce8a96.
---
 arch/mips/kernel/ftrace.c |   36 +-----------------------------------
 arch/mips/kernel/mcount.S |    7 +++----
 2 files changed, 4 insertions(+), 39 deletions(-)

diff --git a/arch/mips/kernel/ftrace.c b/arch/mips/kernel/ftrace.c
index 83fa146..6a2d758 100644
--- a/arch/mips/kernel/ftrace.c
+++ b/arch/mips/kernel/ftrace.c
@@ -25,12 +25,6 @@
 #define MCOUNT_OFFSET_INSNS 4
 #endif
 
-/* Arch override because MIPS doesn't need to run this from stop_machine() */
-void arch_ftrace_update_code(int command)
-{
-	ftrace_modify_all_code(command);
-}
-
 /*
  * Check if the address is in kernel space
  *
@@ -95,24 +89,6 @@ static int ftrace_modify_code(unsigned long ip, unsigned int new_code)
 	return 0;
 }
 
-#ifndef CONFIG_64BIT
-static int ftrace_modify_code_2(unsigned long ip, unsigned int new_code1,
-				unsigned int new_code2)
-{
-	int faulted;
-
-	safe_store_code(new_code1, ip, faulted);
-	if (unlikely(faulted))
-		return -EFAULT;
-	ip += 4;
-	safe_store_code(new_code2, ip, faulted);
-	if (unlikely(faulted))
-		return -EFAULT;
-	flush_icache_range(ip, ip + 8); /* original ip + 12 */
-	return 0;
-}
-#endif
-
 /*
  * The details about the calling site of mcount on MIPS
  *
@@ -155,18 +131,8 @@ int ftrace_make_nop(struct module *mod,
 	 * needed.
 	 */
 	new = in_kernel_space(ip) ? INSN_NOP : INSN_B_1F;
-#ifdef CONFIG_64BIT
+
 	return ftrace_modify_code(ip, new);
-#else
-	/*
-	 * On 32 bit MIPS platforms, gcc adds a stack adjust
-	 * instruction in the delay slot after the branch to
-	 * mcount and expects mcount to restore the sp on return.
-	 * This is based on a legacy API and does nothing but
-	 * waste instructions so it's being removed at runtime.
-	 */
-	return ftrace_modify_code_2(ip, new, INSN_NOP);
-#endif
 }
 
 int ftrace_make_call(struct dyn_ftrace *rec, unsigned long addr)
diff --git a/arch/mips/kernel/mcount.S b/arch/mips/kernel/mcount.S
index 1658676..4c968e7 100644
--- a/arch/mips/kernel/mcount.S
+++ b/arch/mips/kernel/mcount.S
@@ -46,8 +46,9 @@
 	PTR_L	a5, PT_R9(sp)
 	PTR_L	a6, PT_R10(sp)
 	PTR_L	a7, PT_R11(sp)
-#else
 	PTR_ADDIU	sp, PT_SIZE
+#else
+	PTR_ADDIU	sp, (PT_SIZE + 8)
 #endif
 .endm
 
@@ -68,9 +69,7 @@ NESTED(ftrace_caller, PT_SIZE, ra)
 	.globl _mcount
 _mcount:
 	b	ftrace_stub
-	addiu sp,sp,8
-
-	/* When tracing is activated, it calls ftrace_caller+8 (aka here) */
+	 nop
 	lw	t1, function_trace_stop
 	bnez	t1, ftrace_stub
 	 nop
-- 
1.7.10.4

